/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sushantshubham
 */
    public class ScientificCalculator extends javax.swing.JDialog implements Operations {
    
    private boolean disp;
    private boolean mdisp;
    private boolean shift;
    private boolean hyp;
    private boolean deg;
    private double input1;
    private double input2;
    private double tcr;
    private double output;
    private String operation;
    private boolean Dp;
    public ScientificCalculator(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        zero3 = new javax.swing.JButton();
        textArea1 = new java.awt.TextArea();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        Display = new javax.swing.JTextField();
        Zero = new javax.swing.JButton();
        DecimalPoint = new javax.swing.JButton();
        OpenBrac = new javax.swing.JButton();
        CloseBrac = new javax.swing.JButton();
        Equals = new javax.swing.JButton();
        One = new javax.swing.JButton();
        Two = new javax.swing.JButton();
        Three = new javax.swing.JButton();
        Mul = new javax.swing.JButton();
        Div = new javax.swing.JButton();
        Four = new javax.swing.JButton();
        Five = new javax.swing.JButton();
        Six = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Subtract = new javax.swing.JButton();
        Seven = new javax.swing.JButton();
        Eight = new javax.swing.JButton();
        Nine = new javax.swing.JButton();
        Del = new javax.swing.JButton();
        AllClear = new javax.swing.JButton();
        Pie = new javax.swing.JButton();
        PowerSqRoot = new javax.swing.JButton();
        FactInverse = new javax.swing.JButton();
        Log = new javax.swing.JButton();
        Shift = new javax.swing.JToggleButton();
        Deg = new javax.swing.JToggleButton();
        Hyp = new javax.swing.JToggleButton();
        Sin = new javax.swing.JButton();
        Cos = new javax.swing.JButton();
        Tan = new javax.swing.JButton();
        mDisplay = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();

        zero3.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jInternalFrame2.setVisible(true);

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setText("jTextField1");

        setTitle("jCALCULATOR");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 153, 51));
        setFont(new java.awt.Font("Arial", 3, 24)); // NOI18N
        setForeground(new java.awt.Color(255, 102, 51));
        setResizable(false);

        Display.setEditable(false);
        Display.setBackground(new java.awt.Color(0, 204, 102));
        Display.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        Display.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Display.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 7, true));
        Display.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Display.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        Display.setSelectionColor(new java.awt.Color(51, 51, 255));
        Display.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayActionPerformed(evt);
            }
        });

        Zero.setBackground(new java.awt.Color(255, 255, 255));
        Zero.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Zero.setText("0");
        Zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZeroActionPerformed(evt);
            }
        });

        DecimalPoint.setBackground(new java.awt.Color(255, 255, 255));
        DecimalPoint.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        DecimalPoint.setText(".");
        DecimalPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecimalPointActionPerformed(evt);
            }
        });

        OpenBrac.setBackground(new java.awt.Color(255, 255, 255));
        OpenBrac.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        OpenBrac.setText("(");
        OpenBrac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenBracActionPerformed(evt);
            }
        });

        CloseBrac.setBackground(new java.awt.Color(255, 255, 255));
        CloseBrac.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        CloseBrac.setText(")");
        CloseBrac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseBracActionPerformed(evt);
            }
        });

        Equals.setBackground(new java.awt.Color(255, 255, 255));
        Equals.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Equals.setText("=");
        Equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EqualsActionPerformed(evt);
            }
        });

        One.setBackground(new java.awt.Color(255, 255, 255));
        One.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        One.setText("1");
        One.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OneActionPerformed(evt);
            }
        });

        Two.setBackground(new java.awt.Color(255, 255, 255));
        Two.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Two.setText("2");
        Two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TwoActionPerformed(evt);
            }
        });

        Three.setBackground(new java.awt.Color(255, 255, 255));
        Three.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Three.setText("3");
        Three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThreeActionPerformed(evt);
            }
        });

        Mul.setBackground(new java.awt.Color(255, 255, 255));
        Mul.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Mul.setText("×\t");
        Mul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MulActionPerformed(evt);
            }
        });

        Div.setBackground(new java.awt.Color(255, 255, 255));
        Div.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Div.setText("÷\t");
        Div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivActionPerformed(evt);
            }
        });

        Four.setBackground(new java.awt.Color(255, 255, 255));
        Four.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Four.setText("4");
        Four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FourActionPerformed(evt);
            }
        });

        Five.setBackground(new java.awt.Color(255, 255, 255));
        Five.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Five.setText("5");
        Five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiveActionPerformed(evt);
            }
        });

        Six.setBackground(new java.awt.Color(255, 255, 255));
        Six.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Six.setText("6");
        Six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SixActionPerformed(evt);
            }
        });

        Add.setBackground(new java.awt.Color(255, 255, 255));
        Add.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Add.setText("+");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Subtract.setBackground(new java.awt.Color(255, 255, 255));
        Subtract.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Subtract.setText("-");
        Subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtractActionPerformed(evt);
            }
        });

        Seven.setBackground(new java.awt.Color(255, 255, 255));
        Seven.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Seven.setText("7");
        Seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SevenActionPerformed(evt);
            }
        });

        Eight.setBackground(new java.awt.Color(255, 255, 255));
        Eight.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Eight.setText("8");
        Eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EightActionPerformed(evt);
            }
        });

        Nine.setBackground(new java.awt.Color(255, 255, 255));
        Nine.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Nine.setText("9");
        Nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NineActionPerformed(evt);
            }
        });

        Del.setBackground(new java.awt.Color(255, 153, 51));
        Del.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Del.setText("<-");
        Del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelActionPerformed(evt);
            }
        });

        AllClear.setBackground(new java.awt.Color(255, 153, 51));
        AllClear.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        AllClear.setText("AC");
        AllClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllClearActionPerformed(evt);
            }
        });

        Pie.setBackground(new java.awt.Color(102, 102, 102));
        Pie.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Pie.setForeground(new java.awt.Color(255, 255, 255));
        Pie.setText("π\t");
        Pie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PieActionPerformed(evt);
            }
        });

        PowerSqRoot.setBackground(new java.awt.Color(102, 102, 102));
        PowerSqRoot.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        PowerSqRoot.setForeground(new java.awt.Color(255, 255, 255));
        PowerSqRoot.setText("x^y");
        PowerSqRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerSqRootActionPerformed(evt);
            }
        });

        FactInverse.setBackground(new java.awt.Color(102, 102, 102));
        FactInverse.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        FactInverse.setForeground(new java.awt.Color(255, 255, 255));
        FactInverse.setText("n!\t");
        FactInverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FactInverseActionPerformed(evt);
            }
        });

        Log.setBackground(new java.awt.Color(102, 102, 102));
        Log.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Log.setForeground(new java.awt.Color(255, 255, 255));
        Log.setText("log");
        Log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogActionPerformed(evt);
            }
        });

        Shift.setBackground(new java.awt.Color(102, 102, 102));
        Shift.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Shift.setForeground(new java.awt.Color(153, 153, 0));
        Shift.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShiftMouseClicked(evt);
            }
        });
        Shift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShiftActionPerformed(evt);
            }
        });

        Deg.setBackground(new java.awt.Color(102, 102, 102));
        Deg.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Deg.setForeground(new java.awt.Color(255, 255, 255));
        Deg.setText("deg");
        Deg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DegMouseClicked(evt);
            }
        });
        Deg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DegActionPerformed(evt);
            }
        });

        Hyp.setBackground(new java.awt.Color(102, 102, 102));
        Hyp.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Hyp.setForeground(new java.awt.Color(255, 255, 255));
        Hyp.setText("hyp");
        Hyp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HypMouseClicked(evt);
            }
        });

        Sin.setBackground(new java.awt.Color(102, 102, 102));
        Sin.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Sin.setForeground(new java.awt.Color(255, 255, 255));
        Sin.setText("sin");
        Sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SinActionPerformed(evt);
            }
        });

        Cos.setBackground(new java.awt.Color(102, 102, 102));
        Cos.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Cos.setForeground(new java.awt.Color(255, 255, 255));
        Cos.setText("cos");
        Cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CosActionPerformed(evt);
            }
        });

        Tan.setBackground(new java.awt.Color(102, 102, 102));
        Tan.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Tan.setForeground(new java.awt.Color(255, 255, 255));
        Tan.setText("tan");
        Tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TanActionPerformed(evt);
            }
        });

        mDisplay.setEditable(false);
        mDisplay.setBackground(new java.awt.Color(204, 204, 204));
        mDisplay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mDisplay.setForeground(new java.awt.Color(102, 102, 102));
        mDisplay.setToolTipText("");
        mDisplay.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        mDisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mDisplayActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(204, 204, 255));
        jTextField2.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(153, 153, 0));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("       e\t");
        jTextField2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField2.setMinimumSize(new java.awt.Dimension(6, 30));

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(204, 204, 255));
        jTextField4.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(153, 153, 0));
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.setText("ln");
        jTextField4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextField5.setEditable(false);
        jTextField5.setBackground(new java.awt.Color(204, 204, 255));
        jTextField5.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(153, 153, 0));
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField5.setText("y√x");
        jTextField5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextField6.setEditable(false);
        jTextField6.setBackground(new java.awt.Color(204, 204, 255));
        jTextField6.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jTextField6.setForeground(new java.awt.Color(153, 153, 0));
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setText("1/x");
        jTextField6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextField8.setEditable(false);
        jTextField8.setBackground(new java.awt.Color(204, 204, 255));
        jTextField8.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jTextField8.setForeground(new java.awt.Color(153, 153, 0));
        jTextField8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField8.setText("Shift");
        jTextField8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(204, 204, 255));
        jTextField7.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jTextField7.setForeground(new java.awt.Color(153, 153, 0));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setText("tan^(-1)");
        jTextField7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextField9.setEditable(false);
        jTextField9.setBackground(new java.awt.Color(204, 204, 255));
        jTextField9.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jTextField9.setForeground(new java.awt.Color(153, 153, 0));
        jTextField9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField9.setText("cos^(-1)");
        jTextField9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextField10.setEditable(false);
        jTextField10.setBackground(new java.awt.Color(204, 204, 255));
        jTextField10.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jTextField10.setForeground(new java.awt.Color(153, 153, 0));
        jTextField10.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField10.setText("sin^(-1)");
        jTextField10.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTextField10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Shift, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Deg, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Pie, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Hyp, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Zero, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(DecimalPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(OpenBrac, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(CloseBrac, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Equals, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(One, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Two, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Three, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Mul, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Div, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Four, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Five, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Six, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Seven, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Eight, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PowerSqRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(FactInverse, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Nine, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(Del, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AllClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Log, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Sin, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(jTextField10))
                                .addGap(0, 0, 0)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField9)
                                    .addComponent(Cos, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField4)
                            .addComponent(Tan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Display, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mDisplay, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Display, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hyp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Deg, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pie, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PowerSqRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Log, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Shift, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FactInverse, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Seven, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Eight, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Nine, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Del, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AllClear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Four, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Five, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Six, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Subtract, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(One, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Two, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Three, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mul, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Div, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Zero, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DecimalPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OpenBrac, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CloseBrac, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Equals, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelActionPerformed
        String val = Display.getText();
        int len =val.length();
        if (len>0)
        {
            StringBuilder b=new StringBuilder(val);
            b.deleteCharAt(len-1);
            Display.setText(b.toString());
        }
        
        
        
        
    }//GEN-LAST:event_DelActionPerformed

    private void OneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OneActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"1");
        disp=true;
    }//GEN-LAST:event_OneActionPerformed

    private void FiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiveActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"5");
        disp=true;
    }//GEN-LAST:event_FiveActionPerformed

    private void ZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZeroActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"0");
        disp=true;
    }//GEN-LAST:event_ZeroActionPerformed

    private void TwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TwoActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"2");
        disp=true;
    }//GEN-LAST:event_TwoActionPerformed

    private void ThreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThreeActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"3");
        disp=true;
    }//GEN-LAST:event_ThreeActionPerformed

    private void FourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FourActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"4");
        disp=true;
    }//GEN-LAST:event_FourActionPerformed

    private void SixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SixActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"6");
        disp=true;
    }//GEN-LAST:event_SixActionPerformed

    private void SevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SevenActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"7");
        disp=true;
    }//GEN-LAST:event_SevenActionPerformed

    private void EightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EightActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"8");
        disp=true;
    }//GEN-LAST:event_EightActionPerformed

    private void NineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NineActionPerformed
        if(!disp)
        {
            Display.setText(null);
        }
        Display.setText(Display.getText()+"9");
        disp=true;
    }//GEN-LAST:event_NineActionPerformed

    private void LogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogActionPerformed
        if(!shift)
        {   
            operation="log";
            Display.setText("log(");
            storeinput1(operation);
        }
        else
        {
            operation="ln";
            Display.setText("ln(");
            storeinput1(operation);
        }
    }//GEN-LAST:event_LogActionPerformed

    private void DecimalPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecimalPointActionPerformed
        if(!Dp)   
        {
            Display.setText(Display.getText()+".");
            
        }
        
        
        
    }//GEN-LAST:event_DecimalPointActionPerformed

    private void OpenBracActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenBracActionPerformed
        Display.setText(Display.getText()+"(");
        disp=true;
    }//GEN-LAST:event_OpenBracActionPerformed

    private void CloseBracActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseBracActionPerformed
        Display.setText(Display.getText()+")");
        disp=true;
    }//GEN-LAST:event_CloseBracActionPerformed

    private void EqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EqualsActionPerformed
        if(Display.getText().length()>0){
        
            input2=Double.parseDouble(Display.getText());
            
            switch (operation){
                case "+" : add(input1, input2);
                           break;
                case "-" : sub(input1, input2);
                           break;
                case "*" : mul(input1, input2);
                           break;
                case "/" : div(input1, input2);
                           break;
                case "log": mDisplay.setText(operation+"("+input2+")");
                            log (input2);
                            break;
                case "ln" : mDisplay.setText(operation+"("+input2+")");
                            log(input2);
                            break;
                case "n!" : mDisplay.setText(input2+"!");
                            InvFact(input2);
                            break;
                case "1/x" : mDisplay.setText("1/"+input2);
                            InvFact(input2);
                            break;
                case "x^y" : mDisplay.setText(input1+"^"+input2);
                             PowRoot(input1,input2);
                             break;
                case "y√x" : mDisplay.setText(input2+"√"+input1);
                             PowRoot(input1,input2);
                             break;
                case "sin" : mDisplay.setText("sin("+input2+")");
                             output=Math.sin(input2);
                             Display.setText(String.valueOf(output));
                             break;
                case "dsin" :mDisplay.setText("sin("+input2+")");
                             input2=input2*(0.0174533); 
                             output=Math.sin(input2);
                             Display.setText(String.valueOf(output));
                             break;
                case "asin" : mDisplay.setText("sin^-1("+input2+")");
                              if(input2>1)
                              {
                                  Display.setText("MATH ERROR");
                              }
                              else
                              {
                                  output=Math.asin(input2);
                                  Display.setText(String.valueOf(output));
                              }
                              break;
                case "dasin" :mDisplay.setText("sin^-1("+input2+")"); 
                              if(input2>1)
                              {
                                  Display.setText("MATH ERROR");
                              }
                              else
                              {
                                  output=Math.asin(input2);
                                  output=output/(0.0174533); 
                                  Display.setText(String.valueOf(output));
                              }
                             break;       
                case "sinh" : mDisplay.setText("sinh("+input2+")");
                              output=Math.sinh(input2);
                              Display.setText(String.valueOf(output));
                              break;
                case "dsinh" :mDisplay.setText("sinh("+input2+")");
                             output=Math.sinh(input2);
                             Display.setText(String.valueOf(output));
                             break; 
                case "asinh" : mDisplay.setText("sinh^-1("+input2+")");
                                output=Math.log(input2+Math.sqrt(input2*input2+1.0));
                                Display.setText(String.valueOf(output));
                                break;
                case "dasinh" :mDisplay.setText("sinh^-1("+input2+")");
                             output=Math.log(input2+Math.sqrt(input2*input2+1.0));
                             Display.setText(String.valueOf(output));
                             break;
                case "cos" : mDisplay.setText("cos("+input2+")");
                             output=Math.cos(input2);
                             Display.setText(String.valueOf(output));
                             break;
                case "dcos" :mDisplay.setText("cos("+input2+")");
                             input2=input2*(0.0174533); 
                             output=Math.cos(input2);
                             Display.setText(String.valueOf(output));
                             break;
                case "acos" : mDisplay.setText("cos^-1("+input2+")");
                              if(input2>1)
                              {
                                  Display.setText("MATH ERROR");
                              }
                              else
                              {
                                  output=Math.acos(input2);
                                  Display.setText(String.valueOf(output));
                              }
                              break;
                case "dacos" :mDisplay.setText("cos^-1("+input2+")"); 
                              if(input2>1)
                              {
                                  Display.setText("MATH ERROR");
                              }
                              else
                              {
                                  output=Math.acos(input2);
                                  output=output/(0.0174533); 
                                  Display.setText(String.valueOf(output));
                              }
                             break;       
                case "cosh" : mDisplay.setText("cosh("+input2+")");
                              output=Math.cosh(input2);
                              Display.setText(String.valueOf(output));
                              break;
                case "dcosh" :mDisplay.setText("cosh("+input2+")");
                             output=Math.cos(input2);
                             Display.setText(String.valueOf(output));
                             break; 
                case "acosh" : mDisplay.setText("cosh^-1("+input2+")");
                                output=Math.log(input2+Math.sqrt(input2*input2+1.0));
                                Display.setText(String.valueOf(output));
                                break;
                case "dacosh" :mDisplay.setText("cosh^-1("+input2+")");
                             output=Math.log(input2+Math.sqrt(input2*input2+1.0));
                             Display.setText(String.valueOf(output));
                             break;
                case "tan" : mDisplay.setText("tan("+input2+")");
                             output=Math.tan(input2);
                             Display.setText(String.valueOf(output));
                             break;
                case "dtan" :mDisplay.setText("tan("+input2+")");
                             input2=input2*(0.0174533); 
                             output=Math.tan(input2);
                             Display.setText(String.valueOf(output));
                             break;
                case "atan" : mDisplay.setText("tan^-1("+input2+")");
                              if(input2>1)
                              {
                                  Display.setText("MATH ERROR");
                              }
                              else
                              {
                                  output=Math.atan(input2);
                                  Display.setText(String.valueOf(output));
                              }
                              break;
                case "datan" :mDisplay.setText("tan^-1("+input2+")"); 
                              if(input2>1)
                              {
                                  Display.setText("MATH ERROR");
                              }
                              else
                              {
                                  output=Math.atan(input2);
                                  output=output/(0.0174533); 
                                  Display.setText(String.valueOf(output));
                              }
                             break;       
                case "tanh" : mDisplay.setText("tanh("+input2+")");
                              output=Math.tanh(input2);
                              Display.setText(String.valueOf(output));
                              break;
                case "dtanh" :mDisplay.setText("tanh("+input2+")");
                             output=Math.tan(input2);
                             Display.setText(String.valueOf(output));
                             break; 
                case "atanh" : mDisplay.setText("tanh^-1("+input2+")");
                                output=Math.log(input2+Math.sqrt(input2*input2+1.0));
                                Display.setText(String.valueOf(output));
                                break;
                case "datanh" :mDisplay.setText("tanh^-1("+input2+")");
                             output=Math.log(input2+Math.sqrt(input2*input2+1.0));
                             Display.setText(String.valueOf(output));
                             break;
        }
        }
    }//GEN-LAST:event_EqualsActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        operation="+";
        if(Display.getText().length()>0)
            storeinput1(operation);
        
    }//GEN-LAST:event_AddActionPerformed

    private void SubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtractActionPerformed
        operation="-";
        if(Display.getText().length()>0)
            storeinput1(operation);
    }//GEN-LAST:event_SubtractActionPerformed

    private void MulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MulActionPerformed
        operation="*";
        if(Display.getText().length()>0)
            storeinput1(operation);
    }//GEN-LAST:event_MulActionPerformed

    private void DivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivActionPerformed
        operation="/";
        if(Display.getText().length()>0)
            storeinput1(operation);
    }//GEN-LAST:event_DivActionPerformed

    private void AllClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllClearActionPerformed
        mDisplay.setText("");
        Display.setText("");
        disp=false;
        input1=0;
        input2=0;
        output=0;
    }//GEN-LAST:event_AllClearActionPerformed

    private void DisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DisplayActionPerformed

    private void PieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PieActionPerformed
        if(!shift)
        {
            Display.setText(Display.getText()+String.valueOf(Math.PI));
        }
        else//Display.setText(Display.getText()+".");
        {
            Display.setText(Display.getText()+String.valueOf(2.718281828));
        }
    }//GEN-LAST:event_PieActionPerformed

    private void ShiftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShiftMouseClicked
        if(!shift)
        {
            shift=true;
        }
        else
        {
            shift=false;
        }
    }//GEN-LAST:event_ShiftMouseClicked

    private void DegMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DegMouseClicked
        if(!deg)
        {
            deg=true;
        }
        else
        {
            deg=false;
        }
    }//GEN-LAST:event_DegMouseClicked

    private void HypMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HypMouseClicked
        if(!hyp)
        {
            hyp=true;
        }
        else
        {
            hyp=false;
        }
    }//GEN-LAST:event_HypMouseClicked

    private void SinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SinActionPerformed
        if(!shift && !deg && !hyp)
            operation="sin";
        else if(!shift && !hyp)
            operation="dsin";
        else if(!deg && !hyp)
            operation="asin";
        else if(!hyp)
            operation="dasin";
        else if (!shift && !deg)
            operation="sinh";
        else if (!shift)
            operation="dsinh";
        else if (!deg)
            operation="asinh";
        else
            operation="dasinh";
    }//GEN-LAST:event_SinActionPerformed

    private void CosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CosActionPerformed
        if(!shift && !deg && !hyp)
            operation="cos";
        else if(!shift && !hyp)
            operation="dcos";
        else if(!deg && !hyp)
            operation="acos";
        else if(!hyp)
            operation="dacos";
        else if (!shift && !deg)
            operation="cosh";
        else if (!shift)
            operation="dcosh";
        else if (!deg)
            operation="acosh";
        else
            operation="dacosh";
        
    }//GEN-LAST:event_CosActionPerformed

    private void TanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TanActionPerformed
         if(!shift && !deg && !hyp)
            operation="tan";
        else if(!shift && !hyp)
            operation="dtan";
        else if(!deg && !hyp)
            operation="atan";
        else if(!hyp)
            operation="datan";
        else if (!shift && !deg)
            operation="tanh";
        else if (!shift)
            operation="dtanh";
        else if (!deg)
            operation="atanh";
        else
            operation="datanh";
    }//GEN-LAST:event_TanActionPerformed

    private void PowerSqRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerSqRootActionPerformed
        input1=Double.parseDouble(Display.getText());
        if(!shift){
            mDisplay.setText(input1+"^y");
            operation="x^y";
            storeinput1(operation);
        }
        else{
            mDisplay.setText("√"+input1);
            operation="y√x";
            storeinput1(operation);
        }
    }//GEN-LAST:event_PowerSqRootActionPerformed

    private void FactInverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FactInverseActionPerformed
        if(!shift){
            operation="n!";
            storeinput1(operation);
        }
        else{
            operation="1/x";
            storeinput1(operation);
        }
    }//GEN-LAST:event_FactInverseActionPerformed

    private void mDisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mDisplayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mDisplayActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    private void ShiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShiftActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ShiftActionPerformed

    private void DegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DegActionPerformed
    @Override
    public void add(double input1, double input2) 
    {try
    {
       tcr=input1+input2;
       Result(tcr);
    }
    catch(Exception ae)
    {
        System.out.println("syntax error");
    }
    }

    @Override
    public void sub(double input1, double input2) 
       {try
    {
       tcr=input1-input2;
       Result(tcr);
    }
    catch(Exception ae)
    {
        System.out.println("syntax error");
    }
    }
    

    @Override
    public void mul(double input1, double input2) 
      {try
    {
       tcr=input1*input2;
       Result(tcr);
    }
    catch(Exception ae)
    {
        System.out.println("syntax error");
    }
    }
    

    @Override
    public void div(double input1, double input2) 
        {try
    {
       tcr=input1/input2;
       Result(tcr);
    }
    catch(Exception ae)
    {
        System.out.println("syntax error");
    }
    }
    
    
    @Override
    public void log(double input2) {
        if(!shift)
        {
            Result(Math.log(input2)/Math.log(10));
        }
        else
        {
            Result(Math.log(input2)/Math.log(2.718281828));
        }
    }
    @Override
    public  void InvFact(double input2){
        if(!shift){
            int i,fact=1;
            for (i=1;i<=input2;i++)
            {
		fact=fact*i;
            }  
            Result(fact);
        }
        else{
            Result(1/input2);
        } 
    }
    @Override
    public  void PowRoot(double input1, double input2){
        if(!shift){
            Result(Math.pow(input1,input2));
        }
        else{
            input2=1.0/input2;
            Result(Math.pow(input1,input2));
        }
    }
    
    private void Result (double output){
        
        Display.setText(String.valueOf(output));
    }
    private void storeinput1(String operation){
        if ("+".equals(operation) || "-".equals(operation) || "*".equals(operation)|| "/".equals(operation))
        {  
            String value =Display.getText();
            input1=Double.parseDouble(value);
            mDisplay.setText(value+" "+operation);  
        }
        Display.setText("");
    
    if ("log ".equals(operation) || "ln".equals(operation)){
        mDisplay.setText(operation);
    }
    if ("n!".equals(operation) || "1/x".equals(operation)){
        mDisplay.setText(operation);
    }
    if ("x^y".equals(operation) || "y√x".equals(operation)){
        String value =Display.getText();
        input1=Double.parseDouble(value);
        if(!shift){
            mDisplay.setText(input1+"^"+"y");  
        } 
        else{
            mDisplay.setText("√"+input1);
        }
        
    }   
    }
    /**
    * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScientificCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            ScientificCalculator dialog = new ScientificCalculator(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton AllClear;
    private javax.swing.JButton CloseBrac;
    private javax.swing.JButton Cos;
    private javax.swing.JButton DecimalPoint;
    private javax.swing.JToggleButton Deg;
    private javax.swing.JButton Del;
    private javax.swing.JTextField Display;
    private javax.swing.JButton Div;
    private javax.swing.JButton Eight;
    private javax.swing.JButton Equals;
    private javax.swing.JButton FactInverse;
    private javax.swing.JButton Five;
    private javax.swing.JButton Four;
    private javax.swing.JToggleButton Hyp;
    private javax.swing.JButton Log;
    private javax.swing.JButton Mul;
    private javax.swing.JButton Nine;
    private javax.swing.JButton One;
    private javax.swing.JButton OpenBrac;
    private javax.swing.JButton Pie;
    private javax.swing.JButton PowerSqRoot;
    private javax.swing.JButton Seven;
    private javax.swing.JToggleButton Shift;
    private javax.swing.JButton Sin;
    private javax.swing.JButton Six;
    private javax.swing.JButton Subtract;
    private javax.swing.JButton Tan;
    private javax.swing.JButton Three;
    private javax.swing.JButton Two;
    private javax.swing.JButton Zero;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField mDisplay;
    private java.awt.TextArea textArea1;
    private javax.swing.JButton zero3;
    // End of variables declaration//GEN-END:variables

}

